#ifndef version_h__
#define version_h__

#include "shared_defines.h"

typedef struct {
  const int version;
  const char* version_string;
  const char* build_date;
  const char* build_time;
  const char* compiler;
  const char* copyright;
} sVersionInfo_t;

#define DEFINE_LIBRARY_VERSION(name, major, minor, patch, ...) \
  static const sVersionInfo_t name##_version_info = { \
    major * 1000 + minor * 100 + patch, \
    #major"."#minor"."#patch#__VA_ARGS__, \
    __DATE__, \
    __TIME__, \
    __COMPILER_NAME__, \
    "Copyright (C) Nanometrics, Inc" \
  }; \
  static inline const sVersionInfo_t& name##_getVersionInfo() { return name##_version_info; }

#define DEFINE_ALL_COMPONENTS_VERSION(major, minor, patch, ...) \
  DEFINE_LIBRARY_VERSION(LIBIO,   major, minor, patch, __VA_ARGS__) \
  DEFINE_LIBRARY_VERSION(PSFLIB,  major, minor, patch, __VA_ARGS__) \
  DEFINE_LIBRARY_VERSION(PDBLIB,  major, minor, patch, __VA_ARGS__) \
  DEFINE_LIBRARY_VERSION(HARVLIB, major, minor, patch, __VA_ARGS__) \
  DEFINE_LIBRARY_VERSION(HARVCL,  major, minor, patch, __VA_ARGS__)

// libraries versions
DEFINE_ALL_COMPONENTS_VERSION(1, 3, 5, )

#endif // version_h__
