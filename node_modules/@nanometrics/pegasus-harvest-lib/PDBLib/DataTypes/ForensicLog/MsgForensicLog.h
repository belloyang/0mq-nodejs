#ifndef MsgForensicLog_h__
#define MsgForensicLog_h__

#include "../IPDBMsgObject.h"

#define MAX_FORENSIC_LOG_MESSAGE_LEN 486

/// <summary>
/// MsgForensicLog data type.\n
/// https://docs.google.com/document/d/1MmqKtqdSDSwQqB5bv-6PxX23_eUgODdgNfh0yyGyZy4/edit#heading=h.tfo9qdwdkoeb
/// </summary>
class MsgForensicLog : public IPDBMsgObject
{
public:
  //! Header structure
  #pragma pack(push, 1) // compact byte packing
  typedef struct
  {
    //! POSIX time of logged event, nanosecond resolution
    timestamp_t timestamp;
    //! Length, in characters, of the text message, exclusive of null terminating character. Maximum text message length is 484 characters
    uint16_t length;
    //! Free-form text message. The length of the message is given by the length member
    char text[MAX_FORENSIC_LOG_MESSAGE_LEN];
  } Header;
  #pragma pack(pop) // #pragma pack(push, 1)

public:
  //! MsgForensicLog constructor
  MsgForensicLog();

  //! MsgForensicLog destructor
  virtual ~MsgForensicLog() = default;

  /**
   * Initializes MsgForensicLog object
   * @param header  header data
   * @return      true on success; false - otherwise
   */
  bool init(const Header& header);

  /**
   * Header getter
   * @return MsgForensicLog header
   */
  FORCE_INLINE const Header* getHeader() const { return reinterpret_cast<Header*>(m_bufferState.buffer); }
};

#endif //MsgForensicLog_h__
