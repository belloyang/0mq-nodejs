#include "MsgForensicLog.h"

#include <Utils/psf_utils.h>

#include <cstring> // memcpy

MsgForensicLog::MsgForensicLog()
:  IPDBMsgObject(PDB_eMessageType_t::MSG_FORENSIC_LOG_V0)
{
  __DEV_CALLSTACK_FUNC__;
}

bool MsgForensicLog::init(const Header& header)
{
  __DEV_CALLSTACK_FUNC__;
  __ASSERT__(header.length > 0 && "message cannot be empty");
  __ASSERT__(header.length <= NUM_ELEMENTS(header.text) && "Forensic Log message length exceeds maximum");
  __ASSERT__(header.text[header.length - 1] == '\n' && "message must end with a new-line");
  //tss_pdblib::calculate size required for Header and message
  const size_t totalSize = sizeof(Header);
  char* pBuffer = this->_alloc_buffer(totalSize);
  if (pBuffer != nullptr)
  {
    //tss_pdblib::fill up the header
    Header* const headerPtr = reinterpret_cast<Header*>(pBuffer);
    ::memcpy(headerPtr, &header, sizeof(Header));
    return true;
  }

  //tss_pdblib::failed to allocate buffer -> return false;
  return false;
}
