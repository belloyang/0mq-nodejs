#ifndef mem_manager_h__
#define mem_manager_h__

#include <cstdio>
#include <cstdlib>

static size_t s_memoryUsed = 0;
//replacement of a minimal set of functions:
void* operator new(std::size_t sz)
{
    s_memoryUsed += sz;
    std::printf("global op new called (size = %zuB, total_size = %zuB)\n",sz, s_memoryUsed);
    return std::malloc(sz);
}

void operator delete(void* ptr) noexcept
{
    std::puts("global op delete called");
    std::free(ptr);
}

#endif //mem_manager_h__
