#ifndef PSFDetector_Windows_h__
#define PSFDetector_Windows_h__

#include "../../psflib_defines.h"
#include "../IPSFDetector.h"

#include <Windows.h>

/// <summary>
/// PSFDetector_Windows.\n
/// Windows-specific IPSFDetector implementation.
/// </summary>
class PSFDetector_Windows : public IPSFDetector
{
public:
  /**
   * PSFDetector_Windows constructor
   * @param logger    logger instance
   */
  PSFDetector_Windows(const std::shared_ptr<ILogger>& logger);

  /**
   * PSFDetector_Windows destructor
   */
  virtual ~PSFDetector_Windows() = default;

  /**
   * Lists all available PSF device on Windows system
   * @return  listed devices array (vector)
   */
  virtual std::vector<sPSFDeviceInfo_t> listDevices() const __OVERRIDES__(IPSFDetector);
};

#endif //PSFDetector_Windows_h__
