#ifndef IPSFDetector_h__
#define IPSFDetector_h__

#include "../psflib_defines.h"

#include <Logger/ILogger.h>

#include <memory>
#include <vector>
#include <string>
#include <stddef.h>

/// <summary>
/// Basic IPSFDetector interface (abstract class)
/// </summary>
class IPSFDetector
{
public:
  /**
   * IPSFDetector constructor
   * @param logger      logger instance
   */
  IPSFDetector(const std::shared_ptr<ILogger>& logger);

  /**
   * IPSFDetector destructor
   */
  virtual ~IPSFDetector() = default;

  /**
   * Lists all detected PSF devices
   * @return  listed devices array (vector)
   */
  virtual std::vector<sPSFDeviceInfo_t> listDevices() const = 0;

protected:
  //! Logger instance
  const std::shared_ptr<ILogger> m_logger;
};

#endif //IPSFDetector_h__
