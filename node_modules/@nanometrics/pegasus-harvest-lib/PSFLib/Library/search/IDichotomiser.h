#ifndef IDichotomiser_h__
#define IDichotomiser_h__

#include "../../psflib_defines.h"

#include <Logger/ILogger.h>

#include <memory>

/**
 * IDIchotomizer - basic dichotomizer class
 */
class IDichotomiser
{
protected:
  IDichotomiser(const std::shared_ptr<ILogger>& logger) : m_logger(logger) {};

public:
  virtual ~IDichotomiser() {}
  /**
   * Shrinks search range
   * @param from      current range 'from' value
   * @param to        current range 'to' value
   * @param newFrom   new/shrunk range 'from' value
   * @param newTo     new/shrunk range 'to' value
   * @return
   */
  virtual bool shrinkRange(size_t from, size_t to, size_t& newFrom, size_t& newTo) const = 0;

protected:
  const std::shared_ptr<ILogger> m_logger;
};

#endif //IDichotomiser_h__
