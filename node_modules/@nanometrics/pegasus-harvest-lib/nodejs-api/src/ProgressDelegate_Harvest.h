#ifndef ProgressDelegate_Harvest_h__
#define ProgressDelegate_Harvest_h__

#include "IAsyncTask.h"
#include <DataFilters/IProgressDelegate.h>
#include <Operations/IOperation.h>

class ProgressDelegate_Harvest : public IProgressDelegate
{
public:
  ProgressDelegate_Harvest(IAsyncTask* pTask, const std::shared_ptr<IContext>& context, const float step);
  virtual ~ProgressDelegate_Harvest() = default;

  virtual void onProgress(const IOperation* pOperation, const sHarvestProgress& progressData) __OVERRIDES__(IProgressDelegate);
  virtual void onOpReport(const IOperation* pOperation, const sHarvestOpReport& reportData, const MsgHarvestLog::Header& harvestHeader) __OVERRIDES__(IProgressDelegate);

private:
  IAsyncTask* m_pTask;
  const std::shared_ptr<IContext> m_context;
  float m_notificationStep;
  float m_lastNotifiedValue;
  uint32_t m_nReportsSent;
  rapidjson::MemoryPoolAllocator<> m_allocator;
};

#endif //ProgressDelegate_Harvest_h__
