#ifndef AsyncTask_HarvestSOH_h__
#define AsyncTask_HarvestSOH_h__

#include "IAsyncTask.h"
#include <Operations/operations.h>
#include <Client/IClient.h>

class AsyncTask_HarvestSOH : public IAsyncTask
{
public:
  AsyncTask_HarvestSOH(const std::string& libPath,
    const std::string& paramsJSON,
    const uint32_t channelsMask,
    const float updateStep,
    const std::shared_ptr<IHasher>& hasher,
    const std::shared_ptr<ILogger>& logger,
    const std::shared_ptr<IClient>& client);
  virtual ~AsyncTask_HarvestSOH() = default;

private:
  virtual void _runImpl(const std::shared_ptr<IContext>& context) __OVERRIDES__(IAsyncTask);
  virtual bool _stopImpl() __OVERRIDES__(IAsyncTask);

private:
  const std::string m_libPath;
  const std::string m_paramsJSON;
  const uint32_t m_channelsMask;
  const float m_updateStep;
  const std::shared_ptr<IClient> m_client;
  std::shared_ptr<IOperation> m_operation;
};

#endif //AsyncTask_HarvestSOH_h__
