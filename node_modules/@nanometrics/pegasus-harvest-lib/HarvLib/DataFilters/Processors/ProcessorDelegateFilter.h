#ifndef ProcessorDelegateFilter_h__
#define ProcessorDelegateFilter_h__

// This class is used to delegate data processing to external delegate.
#include "../IAsyncFilter.h"
#include "IProcessorDelegate.h"

#include "../Data/PDBDataDesc.h"
#include "../Data/PSFDataDesc.h"
#include "../Data/ErrorDataDesc.h"

#include <memory>

/**
 * Data processor delegate filter.
 */
class ProcessorDelegateFilter : public IAsyncFilter
{
public:
  /**
   * ProcessorDelegateFilter constructor
   * @param maxQueueSize      max quueue size for async reading
   * @param processorDelegate processor delegate to process data read
   * @param logger            logger instance
   */
  ProcessorDelegateFilter(const uint32_t maxQueueSize,
    const std::shared_ptr<IProcessorDelegate>& processorDelegate,
    const std::shared_ptr<ILogger>& logger);

  virtual ~ProcessorDelegateFilter() = default;

  DECLARE_NOCOPYABLE(ProcessorDelegateFilter);

private:
  virtual ErrorDataDesc* finalize(const sHarvestOpReport* pReport) __OVERRIDES__(IAsyncFilter);
  DataDescPtr _processPSFData(const DataDescPtr data, void* userData);
  virtual void _createWorkers() __OVERRIDES__(IAsyncFilter);
  DataDescPtr _workerFunc(IAsyncWorker* pWorker, const DataDescPtr data);

private:
  const std::shared_ptr<IProcessorDelegate> m_processorDelegate;
};

#endif //ProcessorDelegateFilter_h__
