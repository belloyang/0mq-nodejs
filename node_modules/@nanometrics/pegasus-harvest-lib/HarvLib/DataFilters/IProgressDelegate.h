#ifndef IProgressDelegate_h__
#define IProgressDelegate_h__

//tss_harv::this class is used to do handle progress

#include "../harvlib_defines.h"
#include <DataTypes/HarvestLog/MsgHarvestLog.h>

class IOperation;

/**
 * Progress delegate interface. Exposes the functionality to process operation progress
 */
class IProgressDelegate
{
public:
  /**
   * IProgressDelegate destructor
   */
  virtual ~IProgressDelegate(){};

  /**
   * method to be called when operation raises an error
   * @param operation   operation that reported an error
   * @param errorData   error data
   */
  virtual void onError(const IOperation* /*operation*/, const sHarvestError& /*errorData*/) {};
  /**
   * method to be called when new progress information is available
   * @param operation     operation that reported a progress
   * @param progressData  progress data
   */
  virtual void onProgress(const IOperation* /*operation*/, const sHarvestProgress& /*progressData*/) {}

  /**
   * method to be called when operation finished to provide report
   * @param operation   operation that reported a final report
   * @param report      report data
   */
  virtual void onOpReport(const IOperation* /*operation*/, const sHarvestOpReport& /*report*/, const MsgHarvestLog::Header& /*harvestLog*/) {}

protected:
  IProgressDelegate(){};
};

#endif //IProgressDelegate_h__
