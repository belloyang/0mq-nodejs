#ifndef ProgressDataDesc_h__
#define ProgressDataDesc_h__

#include "../../harvlib_defines.h"

#include "../IBaseFilter.h"
#include "IDataDesc.h"

#include <memory>

/**
 * Progress Data desc
 */
class ProgressDataDesc : public IDataDesc
{
public:
  /**
   * ProgressDataDesc constructor
   * @param pReporter         filter that reported the progress
   * @param progressInfo      progress information
   */
  ProgressDataDesc(const IBaseFilter* pReporter, const sHarvestProgress& progressInfo);
  /**
   * ProgressDataDesc destructor
   */
  virtual ~ProgressDataDesc() = default;

  /**
   * Initializes data
   * @param pReporter         filter that reported the progress
   * @param progressInfo      progress information
   */
  bool init(const IBaseFilter* pReporter, const sHarvestProgress& progressInfo);

  FORCE_INLINE const sHarvestProgress& getProgressInfo() const { return m_progressInfo; }
  FORCE_INLINE const IBaseFilter* getReporter() const { return m_pReporter; }
  
private:
  // not implemented
  ProgressDataDesc(const ProgressDataDesc&);
  ProgressDataDesc& operator=(const ProgressDataDesc&);

protected:
  const IBaseFilter* m_pReporter; //filter that reported the progress info
  sHarvestProgress m_progressInfo; //progress information
};

#endif //ProgressDataDesc_h__
