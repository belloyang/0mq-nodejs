#ifndef SamplesGenerator_MinMax_h__
#define SamplesGenerator_MinMax_h__

#include "ISamplesGenerator.h"

/**
 * This class is responsible to generate specified MIN & MAX samples one by one (makes the biggest noise possible in [MIN, MAX] range) 
 */
class SamplesGenerator_MinMax : public ISamplesGenerator
{
public:
  /**
   * SamplesGenerator_MinMax constructor
   * @param minValue  minimum sample value to be generated
   * @param maxValue  maximum sample value to be generated
   */
  SamplesGenerator_MinMax(const sample_t minValue, const sample_t maxValue);
  /**
   * SamplesGenerator_MinMax destructor
   */
  virtual ~SamplesGenerator_MinMax() = default;

protected:
  virtual double _generateRawImpl(const uint64_t sampleIndex) __OVERRIDES__(ISamplesGenerator);

private:
  const sample_t m_min;
  const sample_t m_max;
};

#endif //SamplesGenerator_MinMax_h__
