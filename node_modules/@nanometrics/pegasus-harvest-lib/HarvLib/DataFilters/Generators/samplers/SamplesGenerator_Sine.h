#ifndef SamplesGenerator_Sine_h__
#define SamplesGenerator_Sine_h__

#include "ISamplesGenerator.h"

/**
 * Sinusoid samples generator
 */
class SamplesGenerator_Sine : public ISamplesGenerator
{
public:
  /**
   * SamplesGenerator_Sine constructor
   * @param offset  initial sinusoid phase (radians)
   * @param step    samples generation step (general sample rate ratio)
   * @param scale   sinusoid scaler to expand amplitudes
   */
  SamplesGenerator_Sine(const double offset, const double step, const double scale);
  /**
   * SamplesGenerator_Sine destructor
   */
  virtual ~SamplesGenerator_Sine() = default;

protected:
  virtual double _generateRawImpl(const uint64_t sampleIndex) __OVERRIDES__(ISamplesGenerator);

private:
  const double m_baseOffset; // initial phase, radians
  const double m_step; // phase step per sample, radians
  const double m_scale; // sinusoid amplitude
};

#endif //SamplesGenerator_Sine_h__
