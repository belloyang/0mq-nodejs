#include "SamplesGenerator_Accumulator.h"

SamplesGenerator_Accumulator::SamplesGenerator_Accumulator(const std::vector<std::shared_ptr<ISamplesGenerator>>& generators)
: ISamplesGenerator()
, m_generators(generators)
{
  __DEV_CALLSTACK_FUNC__;
}

double SamplesGenerator_Accumulator::_generateRawImpl(const uint64_t sampleIndex)
{
  __DEV_CALLSTACK_FUNC__;
  // Accumulate output raw sample value from child generators.
  double sum = 0.0;
  for (size_t i = 0; i < m_generators.size(); ++i) {
    sum += m_generators[i]->generateRaw(sampleIndex);
  }
  return sum;
}
