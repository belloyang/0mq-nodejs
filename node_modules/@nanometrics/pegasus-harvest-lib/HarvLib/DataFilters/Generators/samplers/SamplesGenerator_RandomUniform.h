#ifndef SamplesGenerator_RandomUniform_h__
#define SamplesGenerator_RandomUniform_h__

#include "ISamplesGenerator.h"

/**
 * This class is responsible to generate random samples with uniform
 * distribution in some specific range.
 */
class SamplesGenerator_RandomUniform : public ISamplesGenerator
{
public:
  /**
   * SamplesGenerator_RandomUniform constructor
   * @param minValue  minimum sample value to be generated
   * @param maxValue  maximum sample value to be generated
   */
  SamplesGenerator_RandomUniform(const int64_t minValue, const int64_t maxValue);
  /**
   * SamplesGenerator_RandomUniform destructor
   */
  virtual ~SamplesGenerator_RandomUniform() = default;

protected:
  virtual double _generateRawImpl(const uint64_t sampleIndex) __OVERRIDES__(ISamplesGenerator);

private:
  const int64_t m_min;
  const int64_t m_max;
};

#endif //SamplesGenerator_RandomUniform_h__
