#ifndef IPDBDataGenerator_h__
#define IPDBDataGenerator_h__

#include "../IBaseFilter.h"

#include <DataTypes/IPDBMsgObject.h>

/**
 * Basic class/interface for PDB objects generation
 */
class IPDBDataGenerator : public IBaseFilter
{
public:
  /**
   * IPDBDataGenerator constructor
   * @param name    basic filter name
   * @param count   amount of objects to be generated
   * @param notificationStep  progress notification step [0.0; 1.0]
   * @param logger  logger to be used to log operations
   */
  IPDBDataGenerator(const std::string& name, const uint32_t count, const float notificationStep,
      const std::shared_ptr<ILogger>& logger);
  /**
   * IPDBDataGenerator destructor
   */
  virtual ~IPDBDataGenerator() = default;

  virtual ErrorDataDesc* run(const Config* pConfig) __OVERRIDES__(IBaseFilter);

protected:
  virtual IPDBMsgObject* _generateObject(const uint32_t iteration) = 0;

private:
  const uint32_t m_count;
  const float m_notificationStep;
  float m_lastNotifiedProgress;
};

#endif //IPDBDataGenerator_h__
