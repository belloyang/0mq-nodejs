#ifndef GapGenerator_Random_h__
#define GapGenerator_Random_h__

#include "IGapGenerator.h"

/**
 * This class generates a random time gap that is a whole number of seconds between min and max inclusive
 */
class GapGenerator_Random : public IGapGenerator
{
public:
  /**
   * GapGenerator_Random ctor
   * @param minSeconds minimum value for gap (in seconds)
   * @param maxSeconds maximum value for gap (in seconds)
   * @param probability gap probability (0.0 to 1.0)
   */
  GapGenerator_Random(const uint32_t minSeconds, const uint32_t maxSeconds, const float probability);

  /**
   * GapGenerator_Random destructor
   */
  virtual ~GapGenerator_Random() = default;

protected:
  virtual timediff_t _generateImpl(const uint32_t recordIndex) const __OVERRIDES__(IGapGenerator);

private:
  const uint32_t m_minSecs;
  const uint32_t m_maxSecs;
  const float m_probability;
};

#endif //GapGenerator_Random_h__
