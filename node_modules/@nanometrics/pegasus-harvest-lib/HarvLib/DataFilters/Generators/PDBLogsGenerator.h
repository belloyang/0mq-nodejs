#ifndef PDBLogsGenerator_h__
#define PDBLogsGenerator_h__

/**
 * Class that is used for MsgForensicLog generation
 */
#include "IPDBDataGenerator.h"

#include <DataTypes/ForensicLog/MsgForensicLog.h>

class PDBLogsGenerator : public IPDBDataGenerator
{
public:
  /**
   * PDBLogsGenerator constructor
   * @param startTimestamp lower timestamp to start data generation from
   * @param nLogs          amount of logs to be generated
   * @param updateStep     progress update step (in [0.0, 1.0] interval where 0.0 stands for 0%, 1.0 - 100%)
   * @param logger         logger to be used to log the process
   */
  PDBLogsGenerator(const timestamp_t startTimestamp, const size_t nLogs, const float updateStep,
      const std::shared_ptr<ILogger>& logger);
  /**
   * PDBLogsGenerator destructor
   */
  virtual ~PDBLogsGenerator();

  DECLARE_NOCOPYABLE(PDBLogsGenerator);

private:
  virtual IPDBMsgObject* _generateObject(const uint32_t iteration) __OVERRIDES__(IPDBDataGenerator);

private:
  const timestamp_t m_startTimestamp;
  char* m_messageBuffer;
  mem_pool<MsgForensicLog(void)> m_logsMemPool;
};

#endif //PDBLogsGenerator_h__
