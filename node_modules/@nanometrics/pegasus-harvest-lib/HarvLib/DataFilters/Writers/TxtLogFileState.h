#ifndef TxtLogFileState_h__
#define TxtLogFileState_h__

#include "../../harvlib_defines.h"

#include <IOContext/IIOContext.h>
#include <Logger/ILogger.h>

#include <string>
#include <memory>

class TxtLogFileState
{
public:
  TxtLogFileState(const std::string& name, const std::shared_ptr<ILogger>& logger);
  ~TxtLogFileState() = default;

  FORCE_INLINE const std::string& getName() const { return m_name; }
  FORCE_INLINE const std::shared_ptr<IIOContext>& getContext() const { return m_context; }
  FORCE_INLINE io_offset_t getRecordOffset() const { return m_recordOffset; }

  void createContext(const std::string& workingDir, const uint32_t cacheSize);

  void finishRecord(const uint32_t recordLen);

private:
  const std::string m_name;
  io_offset_t m_recordOffset;
  std::shared_ptr<IIOContext> m_context;
  const std::shared_ptr<ILogger> m_logger;
};

#endif // TxtLogFileState_h__
