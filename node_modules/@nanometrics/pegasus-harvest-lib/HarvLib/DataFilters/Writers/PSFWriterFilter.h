#ifndef PSFWriterFilter_h__
#define PSFWriterFilter_h__

//tss_harv::this class is used to write PSF & PDB objects to PSFVolume

#include "../IBaseFilter.h"

#include "../Data/PDBDataDesc.h"
#include "../Data/PSFDataDesc.h"
#include "../Data/ErrorDataDesc.h"

#include <Library/PSFVolume.h>
#include <Library/PSFStream.h>

#include <memory>

/**
 * PSF writer filter
 */
class PSFWriterFilter : public IBaseFilter
{
public:
  /**
   * PSFWriterFilter constructor
   * @param volume  volume to write accepted PSF data to
   * @param logger  logger instance
   */
  PSFWriterFilter(const std::shared_ptr<PSFVolume>& volume, const std::shared_ptr<ILogger>& logger);
  /**
   * PSFWriterFilter destructor
   */
  virtual ~PSFWriterFilter();

  virtual ErrorDataDesc* run(const Config* pConfig) __OVERRIDES__(IBaseFilter);

private:
  DataDescPtr _processPSFData(const DataDescPtr data, void* userData);
  DataDescPtr _processPDBData(const DataDescPtr data, void* userData);

private:
  const std::shared_ptr<PSFVolume> m_volume;
  PSFStream* m_stream;
};

#endif //PSFWriterFilter_h__
