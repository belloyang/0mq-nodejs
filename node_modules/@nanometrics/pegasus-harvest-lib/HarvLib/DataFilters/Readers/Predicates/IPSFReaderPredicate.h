#ifndef IPSFReaderPredicate_h__
#define IPSFReaderPredicate_h__

#include "../../../harvlib_defines.h"

#include <Logger/ILogger.h>

#include <Library/PSFStream.h>
#include <Library/PSFDataElement.h>

#include <DataTypes/HarvestLog/MsgHarvestLog.h>

#include <memory>

class IPSFReaderPredicate
{
public:
  IPSFReaderPredicate(const std::shared_ptr<ILogger>& logger);
  virtual ~IPSFReaderPredicate() = default;

  sSequenceRange getSequenceRange(PSFStream* pStream) const;
  bool check(const PSFDataElement* pDataElement) const;
  bool update(const PSFDataElement* pDataElement);

protected:
  virtual sSequenceRange _getSequenceRangeImpl(PSFStream* pStream) const = 0;
  virtual bool _checkImpl(const PSFDataElement* pDataElement) const = 0;
  virtual bool _updateImpl(const PSFDataElement* pDataElement) = 0;

protected:
  const std::shared_ptr<ILogger> m_logger;
};

#endif //IPSFReaderPredicate_h__

