#include "PSFReaderPredicate_MaxPages.h"

PSFReaderPredicate_MaxPages::PSFReaderPredicate_MaxPages(const uint32_t nPagesMax, const std::shared_ptr<ILogger>& logger)
: IPSFReaderPredicate(logger)
, m_nPagesMax(nPagesMax)
, m_nPagesRead(0)
{
  __DEV_CALLSTACK_FUNC__;
}

sSequenceRange PSFReaderPredicate_MaxPages::_getSequenceRangeImpl(PSFStream* pStream) const
{
  __DEV_CALLSTACK_FUNC__;
  //tss_harvlib:doesn't affect stream start and end (allows to read the entire volume)
  sSequenceRange ret;
  {
    ret.lower = pStream->rtell();
    ret.upper = pStream->wtell() - 1;
  }
  return ret;
}

bool PSFReaderPredicate_MaxPages::_checkImpl(const PSFDataElement* pDataElement) const
{
  __DEV_CALLSTACK_FUNC__;
  //tss_harvlib::check if reading this element causes maxPages limit exceeding
  const uint32_t dataElementSizeInPages = pDataElement->getHeader()->sizeInPages;
  return (m_nPagesRead + dataElementSizeInPages <= m_nPagesMax);
}

bool PSFReaderPredicate_MaxPages::_updateImpl(const PSFDataElement* pDataElement)
{
  __DEV_CALLSTACK_FUNC__;
  //tss_harvlib::update amount of pages read
  const uint32_t dataElementSizeInPages = pDataElement->getHeader()->sizeInPages;
  m_nPagesRead += dataElementSizeInPages;
  return true;
}
