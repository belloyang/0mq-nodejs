#include "IPSFReaderPredicate.h"

IPSFReaderPredicate::IPSFReaderPredicate(const std::shared_ptr<ILogger>& logger)
:  m_logger(logger)
{
  __DEV_CALLSTACK_FUNC__;
}

sSequenceRange IPSFReaderPredicate::getSequenceRange(PSFStream* pStream) const
{
  __DEV_CALLSTACK_FUNC__;
  __ASSERT__(pStream != nullptr && "pStream cannot be nullptr here!");
  return this->_getSequenceRangeImpl(pStream);
}

bool IPSFReaderPredicate::check(const PSFDataElement* pDataElement) const
{
  __DEV_CALLSTACK_FUNC__;
  __ASSERT__(pDataElement != nullptr && "pDataElement cannot be nullptr here!");
  return this->_checkImpl(pDataElement);
}

bool IPSFReaderPredicate::update(const PSFDataElement* pDataElement)
{
  __DEV_CALLSTACK_FUNC__;
  __ASSERT__(pDataElement != nullptr && "pDataElement cannot be nullptr here!");
  return this->_updateImpl(pDataElement);
}
