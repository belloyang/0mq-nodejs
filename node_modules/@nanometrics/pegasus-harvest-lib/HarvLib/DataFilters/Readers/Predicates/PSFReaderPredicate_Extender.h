#ifndef PSFReaderPredicate_Extender_h__
#define PSFReaderPredicate_Extender_h__

#include "IPSFReaderPredicate.h"

#include "IPSFReaderPredicate.h"

#include <memory>

class PSFReaderPredicate_Extender : public IPSFReaderPredicate
{
public:
  PSFReaderPredicate_Extender(const std::shared_ptr<IPSFReaderPredicate>& basePredicate,
    const int32_t lowerOffset, const int32_t upperOffset,
    const std::shared_ptr<ILogger>& logger);
  virtual ~PSFReaderPredicate_Extender() = default;

protected:
  virtual sSequenceRange _getSequenceRangeImpl(PSFStream* pStream) const __OVERRIDES__(IPSFReaderPredicate);
  virtual bool _checkImpl(const PSFDataElement* pDataElement) const __OVERRIDES__(IPSFReaderPredicate);
  virtual bool _updateImpl(const PSFDataElement* pDataElement) __OVERRIDES__(IPSFReaderPredicate);

protected:
  const std::shared_ptr<IPSFReaderPredicate> m_basePredicate;
  const int32_t m_lowerOffset;
  const int32_t m_upperOffset;
};

#endif //PSFReaderPredicate_Extender_h__
