#ifndef PSFReaderPredicate_Common_h__
#define PSFReaderPredicate_Common_h__

#include "IPSFReaderPredicate.h"

#include <Library/PSFVolume.h>

#include <memory>

class PSFReaderPredicate_Common : public IPSFReaderPredicate
{
public:
  PSFReaderPredicate_Common(const PDB_eVolumeID volumeId, const std::shared_ptr<ILogger>& logger);
  virtual ~PSFReaderPredicate_Common() = default;

protected:
  virtual sSequenceRange _getSequenceRangeImpl(PSFStream* pStream) const __OVERRIDES__(IPSFReaderPredicate);
  virtual bool _checkImpl(const PSFDataElement* pDataElement) const __OVERRIDES__(IPSFReaderPredicate);
  virtual bool _updateImpl(const PSFDataElement* pDataElement) __OVERRIDES__(IPSFReaderPredicate);

private:
  const PDB_eVolumeID m_volumeId;
};

#endif //PSFReaderPredicate_TimeRange_h__
