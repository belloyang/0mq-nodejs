#ifndef IClient_h__
#define IClient_h__

#include "../harvlib_defines.h"

#include <Logger/ILogger.h>

#include <string>
#include <memory>

/**
 * IClient - basic class/interface for harvester library client (caller)
 */
class IClient
{
protected:
  IClient(const std::shared_ptr<ILogger>& logger) : m_logger(logger)
  {
    __DEV_CALLSTACK_FUNC__;
  }

public:
  virtual ~IClient()
  {
    __DEV_CALLSTACK_FUNC__;
  }

  //! returns client name
  virtual std::string getName() const = 0;
  //! returns client OS
  virtual std::string getOS() const = 0;
  //! returns client OS kernel
  virtual std::string getKernel() const = 0;
  //! returns client platform
  virtual std::string getPlatform() const = 0;
  //! returns client BIOS information
  virtual std::string getBIOS() const = 0;
  //! returns client CPU information
  virtual std::string getCPU() const = 0;
  //! returns client RAM information
  virtual std::string getRAM() const = 0;
  //! returns client disk information
  virtual std::string getDisk() const = 0;

protected:
  const std::shared_ptr<ILogger> m_logger;
};

#endif //IClient_h__
