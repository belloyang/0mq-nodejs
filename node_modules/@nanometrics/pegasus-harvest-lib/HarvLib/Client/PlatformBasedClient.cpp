#include "PlatformBasedClient.h"

#include <PlatformUtils/PlatformUtils.h>

PlatformBasedClient::PlatformBasedClient(const std::string& name, 
  const std::shared_ptr<ILogger>& logger)
  : IClient(logger)
  , m_name(name)
{
  __DEV_CALLSTACK_FUNC__;
}

std::string PlatformBasedClient::getName() const
{
  __DEV_CALLSTACK_FUNC__;
  return m_name;
}

std::string PlatformBasedClient::getOS() const
{
  __DEV_CALLSTACK_FUNC__;
  return PlatformUtils::getInstance()->getPlatformDesc().os;
}

std::string PlatformBasedClient::getKernel() const
{
  __DEV_CALLSTACK_FUNC__;
  return PlatformUtils::getInstance()->getPlatformDesc().kernel;
}

std::string PlatformBasedClient::getPlatform() const
{
  __DEV_CALLSTACK_FUNC__;
  return PlatformUtils::getInstance()->getPlatformDesc().platform;
}

std::string PlatformBasedClient::getBIOS() const
{
  __DEV_CALLSTACK_FUNC__;
  return PlatformUtils::getInstance()->getPlatformDesc().bios;
}

std::string PlatformBasedClient::getCPU() const
{
  __DEV_CALLSTACK_FUNC__;
  return PlatformUtils::getInstance()->getPlatformDesc().cpu;
}

std::string PlatformBasedClient::getRAM() const
{
  __DEV_CALLSTACK_FUNC__;
  return PlatformUtils::getInstance()->getPlatformDesc().ram;
}

std::string PlatformBasedClient::getDisk() const
{
  __DEV_CALLSTACK_FUNC__;
  return PlatformUtils::getInstance()->getPlatformDesc().disk;
}
