#ifndef PlatformBasedClient_h__
#define PlatformBasedClient_h__

#include "IClient.h"

class PlatformBasedClient : public IClient
{
public:
  PlatformBasedClient(const std::string& name,
    const std::shared_ptr<ILogger>& logger);
  virtual ~PlatformBasedClient() = default;

  virtual std::string getName() const __OVERRIDES__(IClient);
  virtual std::string getOS() const __OVERRIDES__(IClient);
  virtual std::string getKernel() const __OVERRIDES__(IClient);
  virtual std::string getPlatform() const __OVERRIDES__(IClient);
  virtual std::string getBIOS() const __OVERRIDES__(IClient);
  virtual std::string getCPU() const __OVERRIDES__(IClient);
  virtual std::string getRAM() const __OVERRIDES__(IClient);
  virtual std::string getDisk() const __OVERRIDES__(IClient);

private:
  const std::string m_name;
};

#endif //PlatformBasedClient_h__
