#ifndef Operation_HarvestData_h__
#define Operation_HarvestData_h__

#include "IOperation.h"

#include "../DataFilters/GraphBuilder.h"

/**
 * Data harvesting operation.
 */
class Operation_HarvestData : public IOperation
{
public:
  /**
   * Operation_HarvestData constructor
   * @param libPath           PSF library path
   * @param params            harvesting parameters
   * @param client            client information interface
   * @param progressDelegate  progress delegate
   */
  Operation_HarvestData(const std::string& libPath,
    const sHarvestParams& params,
    const std::shared_ptr<IClient>& client,
    const std::shared_ptr<IProgressDelegate>& progressDelegate);
  
  /**
   * Operation_HarvestData destructor
   */
  virtual ~Operation_HarvestData() = default;
  
private:
  virtual bool _executeImpl(const std::shared_ptr<IHasher>& hasher, 
      const std::shared_ptr<ILogger>& logger) __OVERRIDES__(IOperation);
  virtual bool _stopImpl() __OVERRIDES__(IOperation);

private:
  const std::string m_libPath;
  const sHarvestParams m_params;
  const std::shared_ptr<IClient> m_client;
  const std::shared_ptr<IProgressDelegate> m_progressDelegate;
  std::shared_ptr<IBaseFilter> m_headFilter;
};

#endif //Operation_HarvestData_h__
