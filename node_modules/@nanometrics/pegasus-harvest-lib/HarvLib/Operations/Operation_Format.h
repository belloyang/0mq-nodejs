#ifndef Operation_Format_h__
#define Operation_Format_h__

#include "IOperation.h"

#include <vector>
#include <memory>

/**
 * Format operation. Provides the functionality to create FAT16 partition and PSF structure on specified block device/disk
 */
class Operation_Format : public IOperation
{
public:
  class IDelegate
  {
  public:
    enum eStage : uint8_t
    {
      STAGE_PARSING_CONFIG = 0,
      STAGE_CREATING_FAT32 = 1,
      STAGE_CREATING_PSF = 2,
      STAGE_COMPLETED = 3,
      STAGES_COUNT
    };
    virtual ~IDelegate() {}
    virtual void onStageChanged(IOperation* pOperation, const eStage currentStage) = 0;
    virtual void onCompleted(IOperation* pOperation, const eOperationStatus status) = 0;
  };
  /**
   * Operation_Format constructor
   * @param libPath           path that library will be created at
   * @param bCreatePSF        specifies if PSF structure should be rewritten (if false - only FAT16 partition re-created)
   * @param configFile        JSON-configuration file path (describes volumes schema to be created in PSF library)
   */
  Operation_Format(const std::string& libPath, const bool bCreatePSF, const std::string& configFile,
      const std::shared_ptr<IDelegate>& delegate);
  /**
   * Operation_Fromat destructor
   */
  virtual ~Operation_Format() = default;
  
private:
  virtual bool _executeImpl(const std::shared_ptr<IHasher>& hasher, 
      const std::shared_ptr<ILogger>& logger) __OVERRIDES__(IOperation);
  virtual bool _stopImpl() __OVERRIDES__(IOperation);

  bool _parseJSON(const std::string& jsonPath, sPSFFormatConfig_t& config,
    const std::shared_ptr<ILogger>& logger) const;

  bool _createPSF(const std::string& physicalPath,
    const std::shared_ptr<IHasher>& hasher, const std::shared_ptr<ILogger>& logger);
  
private:
  const std::string m_libPath;
  const bool m_bCreatePSF;
  const std::string m_configFile;
  sPSFFormatConfig_t m_configuration;
  const std::shared_ptr<IDelegate> m_delegate;
};

#endif //Operation_Format_h__
