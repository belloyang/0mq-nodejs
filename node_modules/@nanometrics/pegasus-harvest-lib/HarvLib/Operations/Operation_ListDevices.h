#ifndef Operation_ListDevices_h__
#define Operation_ListDevices_h__

#include "IOperation.h"

#include <vector>

/**
 * Operation to list all connected PSF devices (digitizers) on system
 */
class Operation_ListDevices : public IOperation
{
public:
  class IDelegate
  {
  public:
    virtual ~IDelegate() {}
    virtual void onDeviceFound(IOperation* pOperation, const sPSFDeviceInfo_t& device) = 0;
    virtual void onCompleted(IOperation* pOperation, const eOperationStatus status) = 0;
  };

  /**
   * Operation_ListDevices constructor
   * @param delegate    delegate to handle operation process
   */
  Operation_ListDevices(const std::shared_ptr<IDelegate>& delegate);
  
  /**
   * Operation_ListDevices destructor
   */
  virtual ~Operation_ListDevices() = default;
  
private:
  virtual bool _executeImpl(const std::shared_ptr<IHasher>& hasher, 
      const std::shared_ptr<ILogger>& logger) __OVERRIDES__(IOperation);
  virtual bool _stopImpl() __OVERRIDES__(IOperation);
  
private:
  const std::shared_ptr<IDelegate> m_delegate;
};

#endif //Operation_ListDevices_h__
