#ifndef SteimDecoder_Steim1_h__
#define SteimDecoder_Steim1_h__

#include "ISteimDecoder.h"

class SteimDecoder_Steim1 : public ISteimDecoder
{
public:
  SteimDecoder_Steim1(const std::shared_ptr<ILogger>& logger);
  virtual ~SteimDecoder_Steim1() = default;

private:
  virtual uint32_t _allocateBufferImpl(const uint32_t nFrames, sample_t** pOutput) const __OVERRIDES__(ISteimDecoder);
  virtual uint8_t _decompressDiffsImpl(const uint32_t compression, const uint32_t dataset, steim::PacketInfo* packet,
      const bool isBigEndian) const __OVERRIDES__(ISteimDecoder);
};

#endif //SteimDecoder_Steim1_h__
