#ifndef TimeRangeFetcher_ClockStatus_h__
#define TimeRangeFetcher_ClockStatus_h__

#include "ITimeRangeFetcher.h"

class TimeRangeFetcher_ClockStatus : public ITimeRangeFetcher
{
public:
  TimeRangeFetcher_ClockStatus(const std::shared_ptr<ILogger>& logger);
  virtual ~TimeRangeFetcher_ClockStatus() = default;

protected:
  bool _getLowerTimeImpl(const PSFDataElement& dataElement, timestamp_t* result) const __OVERRIDES__(ITimeRangeFetcher);
  bool _getUpperTimeImpl(const PSFDataElement& dataElement, timestamp_t* result) const __OVERRIDES__(ITimeRangeFetcher);
};

#endif //TimeRangeFetcher_ClockStatus_h__
