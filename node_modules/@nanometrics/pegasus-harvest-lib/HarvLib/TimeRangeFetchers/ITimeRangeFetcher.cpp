#include "ITimeRangeFetcher.h"

ITimeRangeFetcher::ITimeRangeFetcher(const std::shared_ptr<ILogger>& logger)
  : m_logger(logger)
{
  __DEV_CALLSTACK_FUNC__;
}

bool ITimeRangeFetcher::getLowerTime(const PSFDataElement& dataElement, timestamp_t* result) const
{
  __DEV_CALLSTACK_FUNC__;
  __ASSERT__(result != nullptr && "result cannot be nullptr here!");
  return this->_getLowerTimeImpl(dataElement, result);
}

bool ITimeRangeFetcher::getUpperTime(const PSFDataElement& dataElement, timestamp_t* result) const
{
  __DEV_CALLSTACK_FUNC__;
  __ASSERT__(result != nullptr && "result cannot be nullptr here!");
  return this->_getUpperTimeImpl(dataElement, result);
}

bool ITimeRangeFetcher::getTimeRange(const PSFDataElement& dataElement, timestamp_t* lowerTime, timestamp_t* upperTime) const
{
  __DEV_CALLSTACK_FUNC__;
  __ASSERT__((lowerTime != nullptr || upperTime != nullptr) && "both lower & upper times cannot be nullptr here!");
  if (lowerTime != nullptr)
  {
    const bool bLowerFetched = this->_getLowerTimeImpl(dataElement, lowerTime);
    if (!bLowerFetched)
      return false;
  }
  
  if (upperTime != nullptr)
  {
    return this->_getUpperTimeImpl(dataElement, upperTime);
  }

  return true;
}
