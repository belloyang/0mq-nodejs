#ifndef ITimeRangeFetcher_h__
#define ITimeRangeFetcher_h__

#include "../harvlib_defines.h"

#include <Logger/ILogger.h>

#include <Library/PSFDataElement.h>

class ITimeRangeFetcher
{
protected:
  ITimeRangeFetcher(const std::shared_ptr<ILogger>& logger);

public:
  virtual ~ITimeRangeFetcher() = default;

  bool getLowerTime(const PSFDataElement& dataElement, timestamp_t* result) const;
  bool getUpperTime(const PSFDataElement& dataElement, timestamp_t* result) const;
  bool getTimeRange(const PSFDataElement& dataElement, timestamp_t* lowerTime, timestamp_t* upperTime) const;

protected:
  virtual bool _getLowerTimeImpl(const PSFDataElement& dataElement, timestamp_t* result) const = 0;
  virtual bool _getUpperTimeImpl(const PSFDataElement& dataElement, timestamp_t* result) const = 0;

protected:
  const std::shared_ptr<ILogger> m_logger;
};


#endif //ITimeRangeFetcher_h__
