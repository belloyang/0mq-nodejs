#ifndef SerialPort_POSIX_h__
#define SerialPort_POSIX_h__

#include "../shared_defines.h"
#include <ISerialPort.hpp>

#include <Logger/ILogger.h>

#include <memory>

class SerialPort_POSIX : public ISerialPort
{
public:
  SerialPort_POSIX(const std::string& path, const uint32_t baudRate, const std::shared_ptr<ILogger>& logger);
  virtual ~SerialPort_POSIX();

  virtual uint32_t send(const void* buffer, const uint32_t size) __OVERRIDES__(ISerialPort);
  virtual uint32_t receive(void* buffer, const uint32_t size) __OVERRIDES__(ISerialPort);

private:
  const std::string m_path;
  const uint32_t m_baudRate;
  int m_handle;
  const std::shared_ptr<ILogger> m_logger;
};

#endif // SerialPort_POSIX_h__
