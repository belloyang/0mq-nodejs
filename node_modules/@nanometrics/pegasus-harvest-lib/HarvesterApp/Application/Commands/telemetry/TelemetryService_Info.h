#ifndef TelemetryService_Info_h__
#define TelemetryService_Info_h__

#include "ITelemetryService.h"

class TelemetryService_Info : public ITelemetryService
{
public:
  TelemetryService_Info(const std::shared_ptr<TelemetryPacketsFactory>& factory,
    const std::shared_ptr<TelemetryPacketsProcessor>& processor,
    const std::shared_ptr<EventsQueue>& eventsQueue,
    const std::shared_ptr<ILogger>& logger);
  virtual ~TelemetryService_Info() = default;

  virtual bool processPacket(const TelemetryAPI::Packet& packet) __OVERRIDES__(ITelemetryService);
  virtual void stop() __OVERRIDES__(ITelemetryService);

private:
  void _requestInfo();
};

#endif // TelemetryService_Info_h__
