#ifndef CLCommand_Harvest_h__
#define CLCommand_Harvest_h__

#include "CLCommandBase.h"
#include <DataTypes/HarvestLog/MsgHarvestLog.h>

class CLCommand_Harvest : public CLCommandBase
{
public:
  CLCommand_Harvest(const std::shared_ptr<ILogger>& logger);
  virtual ~CLCommand_Harvest() = default;
  void addHarvestLog(const MsgHarvestLog::Header& harvestLog);

private:
  virtual int _runImpl() __OVERRIDES__(ICLCommand);
  virtual std::string _getDescriptionImpl() const __OVERRIDES__(ICLCommand);
  
  bool _parseLibPath(const char* arg);
  bool _parseLowerTime(const char* arg);
  bool _parseUpperTime(const char* arg);
  bool _parseOutput(const char* arg);
  bool _parsePattern(const char* arg);
  bool _parseDuration(const char* arg);
  bool _parsePagesCount(const char* arg);
  bool _parseExtension(const char* arg);

private:
  std::string m_libPath;
  sHarvestParams m_params;
  bool m_bAppendExtension;
  std::vector<MsgHarvestLog::Header> m_harvestLogs;
};

#endif //CLCommand_Harvest_h__
