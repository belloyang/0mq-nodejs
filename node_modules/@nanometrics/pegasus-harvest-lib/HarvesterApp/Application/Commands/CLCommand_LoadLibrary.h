#ifndef CLCommand_LoadLibrary_h__
#define CLCommand_LoadLibrary_h__

#include "CLCommandBase.h"

#include <IOContext/IIOContext.h>

class CLCommand_LoadLibrary : public CLCommandBase
{
public:
  CLCommand_LoadLibrary(const std::shared_ptr<ILogger>& logger);
  virtual ~CLCommand_LoadLibrary() = default;

private:
  virtual int _runImpl() __OVERRIDES__(ICLCommand);

  std::shared_ptr<IIOContext> _createFileContext(const std::string& path) const;
  std::shared_ptr<IIOContext> _createDeviceContext(const std::string& path) const;

  virtual std::string _getDescriptionImpl() const __OVERRIDES__(ICLCommand);
  bool _parseLibPath(const char* arg);
  bool _parseInputPath(const char* arg);
  bool _parseCreateFat32(const char* arg);

private:
  std::string m_libPath;
  std::string m_inputPath;
  bool m_bCreateFAT32;
};

#endif // CLCommand_LoadLibrary_h__
