#ifndef CLCommand_GenerateSOH_h__
#define CLCommand_GenerateSOH_h__

#include "CLCommandBase.h"

class CLCommand_GenerateSOH : public CLCommandBase
{
public:
  CLCommand_GenerateSOH(const std::shared_ptr<ILogger>& logger);
  virtual ~CLCommand_GenerateSOH() = default;

private:
  virtual int _runImpl() __OVERRIDES__(ICLCommand);
  virtual std::string _getDescriptionImpl() const __OVERRIDES__(ICLCommand);
  
  bool _parseLibPath(const char* arg);
  bool _parsePacketsCount(const char* arg);
  bool _parseStartTimestamp(const char* arg);
  bool _parseMinGapSecs(const char* arg);
  bool _parseMaxGapSecs(const char* arg);
  bool _parseGapProbability(const char* arg);
  bool _parseSignalLevel(const char* arg);
  bool _parseNoiseLevel(const char* arg);
  
private:
  std::string m_libPath;
  int32_t m_nPackets;
  timestamp_t m_startTimestamp;
  uint32_t m_minGapSecs;
  uint32_t m_maxGapSecs;
  float m_gapProbability;
  double m_signalLevel; // peak level of sinusoid, fractional counts
  double m_noiseLevel; // RMS level of additive noise, fractional counts
};

#endif //CLCommand_GenerateLogs_h__
