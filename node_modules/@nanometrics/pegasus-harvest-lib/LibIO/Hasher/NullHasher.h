#ifndef NullHasher_h__
#define NullHasher_h__

#include "IHasher.h"

/// <summary>
/// Null hash implementation. Dummy placeholder that allows to suppress all hash calculations and integrity checks.\n
/// Can be used to easily disable hash calculation and integrity checks.
/// </summary>
class NullHasher : public IHasher
{
public:
  /**
   * NullHasher constructor.
   * @param logger  logger instance
   */
  NullHasher(const std::shared_ptr<ILogger>& logger);

  /**
   * NullHasher destructor.
   */
  virtual ~NullHasher() = default;
  
private:
  virtual int getHash32(const std::shared_ptr<IIOContext>& ioContext, Hash32_t& hash) const __OVERRIDES__(IHasher);
  virtual bool checkIntegrity(const std::shared_ptr<IIOContext>& ioContext, Hash32_t hashExpect) const __OVERRIDES__(IHasher);
};

#endif //NullHasher_h__
