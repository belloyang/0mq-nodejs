#ifndef CRCDriver_Mpeg32_SW_h__
#define CRCDriver_Mpeg32_SW_h__

#include "ICRCDriver.h"

class CRCDriver_Mpeg32_SW : public ICRCDriver
{
public:
  CRCDriver_Mpeg32_SW(const std::shared_ptr<ILogger>& logger);
  virtual ~CRCDriver_Mpeg32_SW() = default;

private:
  virtual uint32_t _calculateImpl(const void* pBuffer, uint32_t len) __OVERRIDES__(ICRCDriver);
  virtual uint32_t _accumulateImpl(const void* pBuffer, uint32_t len) __OVERRIDES__(ICRCDriver);
  virtual uint32_t _finalizeImpl(const uint32_t crc) __OVERRIDES__(ICRCDriver);

  static uint32_t _crc32_mpeg(const char* pData, const uint32_t len, const uint32_t init = 0xffffffff);

private:
 uint32_t m_lastValue;
};

#endif //CRCDriver_Mpeg32_SW_h__
