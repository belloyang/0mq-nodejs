#ifndef CRCDriver_CRC16_CCITT_h__
#define CRCDriver_CRC16_CCITT_h__

#include "ICRCDriver.h"

class CRCDriver_CRC16_CCITT : public ICRCDriver
{
public:
  CRCDriver_CRC16_CCITT(const std::shared_ptr<ILogger>& logger);
  virtual ~CRCDriver_CRC16_CCITT() = default;

private:
  virtual uint32_t _calculateImpl(const void* pBuffer, uint32_t len) __OVERRIDES__(ICRCDriver);
  virtual uint32_t _accumulateImpl(const void* pBuffer, uint32_t len) __OVERRIDES__(ICRCDriver);
  virtual uint32_t _finalizeImpl(const uint32_t crc) __OVERRIDES__(ICRCDriver);

  uint16_t _crc16_ccitt(const uint8_t* pData, const uint32_t len, const uint16_t init);

  uint16_t m_lastValue;
};

#endif //CRCDriver_CRC16_CCITT_h__
