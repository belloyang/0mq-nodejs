#include "NullHasher.h"

#include <string.h>

NullHasher::NullHasher(const std::shared_ptr<ILogger>& logger)
:  IHasher("NullHasher", logger)
{
  __DEV_CALLSTACK_FUNC__;
}

int NullHasher::getHash32(const std::shared_ptr<IIOContext>& /*ioContext*/, Hash32_t& hash) const
{
  __DEV_CALLSTACK_FUNC__;
  //tss_libio::null hasher doesn't calculate hash -> return 0
  hash.value = 0u;
  return HASH_SIZE_BYTES;
}

bool NullHasher::checkIntegrity(const std::shared_ptr<IIOContext>& /*ioContext*/, Hash32_t /*hashExpect*/) const
{
  __DEV_CALLSTACK_FUNC__;
  //tss_libio::skip integrity check always assuming hash correctness
  return true;
}
