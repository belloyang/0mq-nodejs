#ifndef TimeMeter_h__
#define TimeMeter_h__

#include "../libio_defines.h"

#include "IMeter.h"
#include "Timers/ITimer.h"
#include <memory>

/// <summary>
/// TimeMeter implementation.\n
/// Allows to perform time measurements for operation
/// </summary>
class TimeMeter : public IMeter
{
public:
  /**
   * TimeMeter constructor
   * @param name  meter's name
   */
  TimeMeter(const std::string& name);

  /**
   * TimeMeter destructor
   */
  virtual ~TimeMeter() = default;

  /**
   * Returns meter-specific metric
   * @return  time (milliseconds) elapsed since meter created
   */
  virtual int64_t getMetric() const __OVERRIDES__(IMeter);

private:
  const std::unique_ptr<ITimer> m_timer;
  timestamp_t m_startTime;
};

#endif //TimeMeter_h__
