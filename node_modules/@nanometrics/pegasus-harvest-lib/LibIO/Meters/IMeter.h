#ifndef IMeter_h__
#define IMeter_h__

#include "../libio_defines.h"

#include <memory>
#include <cstddef>
#include <string>

/// <summary>
/// Basic IMeter interface
/// </summary>
class IMeter
{
protected:
  /**
   * Protected IMeter constructor
   * @param name    meter's name
   */
  IMeter(const std::string& name) : m_name(name) {}
  
public:
  /**
   * IMeter destructor
   */
  virtual ~IMeter() {}

  /**
   * Meter's name getter
   * @return  metr's name
   */
  FORCE_INLINE const std::string& getName() const { return m_name; }

  /**
   * Return's meter-specific metric
   * @return  metric captured by meter
   */
  virtual int64_t getMetric() const = 0;

protected:
  //! meter's name
  const std::string m_name;
};

#endif //IMeter_h__
