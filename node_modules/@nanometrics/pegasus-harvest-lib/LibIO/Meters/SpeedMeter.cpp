#include "SpeedMeter.h"
#include "Timers/TimerNs.h"

SpeedMeter::SpeedMeter(const std::string& name, const size_t dataSizeInBytes)
:  IMeter(name)
,  m_timer(new TimerNs())
,  m_dataSizeInBytes(dataSizeInBytes)
{
  __DEV_CALLSTACK_FUNC__;
  m_startTime = m_timer->now();
}

int64_t SpeedMeter::getMetric() const
{
  __DEV_CALLSTACK_FUNC__;
  const timediff_t elapsedTimeNs = m_timer->getElapsed(m_startTime);
  const double speedBytesPerMs = (double)m_dataSizeInBytes / (double)(elapsedTimeNs / 1000000LL);
  return (int64_t)speedBytesPerMs;
}
