#ifndef zip_utils_h__
#define zip_utils_h__

#include "../libio_defines.h"

#include "../IOContext/IIOContext.h"
#include "../Logger/ILogger.h"

#include <memory>
#include <string>
#include <vector>

namespace zip_utils
{
  struct FileInfo
  {
    std::string name; // file name
    uint32_t offset = 0u; // file data offset from the beginning of the ZIP file
    uint32_t length = 0u; // file length in bytes
    uint32_t crc32 = 0u; // CRC32 sum
  };

  /**
   * Parses ZIP structure from I/O context
   * @param context     I/O context to extract ZIP structure from
   * @param logger      logger instance
   * @param outputInfo  output array local files
   * @return  amount of entities parsed in ZIP
   */
  uint32_t parse(const std::shared_ptr<IIOContext>& context, const std::shared_ptr<ILogger>& logger,
      std::vector<FileInfo>& outputInfo);
}

#endif //zip_utils_h__
