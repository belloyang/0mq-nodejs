#include "DriverBasedIOContext.h"

#include <string.h>

DriverBasedIOContext::DriverBasedIOContext(const std::shared_ptr<IIODriver>& ioDriver,
    const std::shared_ptr<ILogger>& logger)
:  IIOContext(logger)
,  m_ioDriver(ioDriver)
{
  __DEV_CALLSTACK_FUNC__;
}

size_t DriverBasedIOContext::readBlock(io_offset_t offset, size_t blockSize, void* pOutput)
{
  __DEV_CALLSTACK_FUNC__;
  return m_ioDriver->readBlocks(offset, blockSize, pOutput);
}

size_t DriverBasedIOContext::writeBlock(io_offset_t offset, size_t blockSize, const void* pData)
{
  __DEV_CALLSTACK_FUNC__;
  return m_ioDriver->writeBlocks(offset, blockSize, pData);
}

void DriverBasedIOContext::flush()
{
  __DEV_CALLSTACK_FUNC__;
  //do nothing here
}

uint64_t DriverBasedIOContext::getSize() const
{
  __DEV_CALLSTACK_FUNC__;
  return m_ioDriver->getSize();
}
